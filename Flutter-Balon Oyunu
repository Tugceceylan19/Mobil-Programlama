import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'dart:math';

class BubbleGame extends StatefulWidget {
  @override
  _BubbleGameState createState() => _BubbleGameState();
}

class _BubbleGameState extends State<BubbleGame> {
  List<Offset> bubbles = [];
  int score = 0;

  void _addBubble() {
    setState(() {
      bubbles.add(Offset(Random().nextDouble() * MediaQuery.of(context).size.width,
          Random().nextDouble() * MediaQuery.of(context).size.height));
    });
  }

  void _popBubble(Offset tapPosition) {
    setState(() {
      bubbles.removeWhere((bubble) =>
          (bubble - tapPosition).distanceSquared < 50.0.squared);
      score++;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Baloncuk Oyunu'),
      ),
      body: GestureDetector(
        onTapDown: (TapDownDetails details) {
          _popBubble(details.globalPosition);
        },
        child: CustomPaint(
          painter: BubblePainter(bubbles),
          child: Center(
            child: Text('Puan: $score'),
          ),
        ),
      ),
    );
  }
}

class BubblePainter extends CustomPainter {
  final List<Offset> bubbles;

  BubblePainter(this.bubbles);

  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()..color = Colors.blue;
    for (final bubble in bubbles) {
      canvas.drawCircle(bubble, 20.r, paint);
    }
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
